// The ui-variables file is provided by base themes provided by Atom.
//
// See https://github.com/atom/atom-dark-ui/blob/master/styles/ui-variables.less
// for a full listing of what's available.

:root {
	--mcfunction-novum-comment: #8A8A8A;
	--mcfunction-novum-deactivated: inherit;
}

@import "ui-variables";
@import (optional) "index.less";


i.icon {
	display: block !important;
	&.command {
		color: @syntax-color-keyword;
		background: fadeout(@syntax-color-keyword, 80%);
	}
}

.icon-wrapper {
	&.command {
		background: fadeout(@syntax-color-keyword, 80%) !important;
	}
}

.icon-svg {

	&.command {
		>line {
			stroke: @syntax-color-keyword;
		}
	}
}

.popup-btn {
	float: none !important;
}

.highlighting-generator(@name,@color) {
	@{name} {
		color: @color;
	}
	.syntax--comment {
		@{name} {
			color: var(--mcfunction-novum-deactivated,mix(@base-background-color,@color,35%));
		}
	}
}

.syntax--source.syntax--mcfunction {
	.highlighting-generator(~".syntax--selector",@syntax-color-function);
	.highlighting-generator(~".syntax--argument .syntax--name",@syntax-color-tag);
	.highlighting-generator(~".syntax--argument .syntax--value",@syntax-color-snippet);
	.highlighting-generator(~".syntax--state .syntax--name",@syntax-color-tag);
	.highlighting-generator(~".syntax--state .syntax--value",@syntax-color-snippet);
	.highlighting-generator(~".syntax--nbt .syntax--key",@syntax-color-tag);
	.highlighting-generator(~".syntax--nbt .syntax--value",@syntax-color-snippet);
	.highlighting-generator(~".syntax--command",@syntax-color-keyword);
	.highlighting-generator(~".syntax--coord",@syntax-color-constant);
	.highlighting-generator(~".syntax--uuid",@syntax-color-variable);
	.highlighting-generator(~".syntax--execute",lighten(@syntax-color-keyword, 15%, relative));
	.highlighting-generator(~".syntax--operation",@ui-site-color-5);
	.highlighting-generator(~".syntax--error",@text-color-error);
	.highlighting-generator(~".syntax--string",@syntax-color-snippet);
	.highlighting-generator(~".syntax--number",@syntax-color-class);
	
	
	.syntax--comment {
		color: var(--mcfunction-novum-comment);
	}
}