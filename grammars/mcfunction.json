{
	"scopeName": "source.mcfunction",
	"name": "mcfunction",
	"fileTypes": ["mcfunction", "ams"],
	"patterns": [
		{
			"name": "argument",
			"begin": "(@[parse])\\[",
			"beginCaptures": {
				"1": {
					"name": "selector"
				}
			},
			"end": "\\]",
			"patterns": [
				{
					"match": "(?:(?<=,|\\[) *)([\\w_:]+)(?: *(?==))",
					"captures": {
						"1": {
							"name": "name"
						}
					}
				},
				{
					"match": "(?:(?<==) *)([\\w_!\\.:#-]+)(?: *(?=,|\\]))",
					"captures": {
						"1": {
							"name": "value"
						}
					}
				},
				{
					"include": "#nbt-compound"
				}
			]
		},
		{
			"match": "@[parse]|(?<= )\\*(?= )",
			"name": "selector"
		},
		{
			"match": "(?<= )[<>=%+-\\/]+(?= )|(?<= )\\*=(?= )",
			"name": "operation"
		},
		{
			"match": "(?<= )\\\".+\\\"",
			"name": "string"
		},
		{
			"match": "(?<= )(align|anchored|as|at|facing|if|in|positioned|rotated|store|unless|run)(?= )",
			"name": "execute"
		},
		{
			"include": "#nbt-compound"
		},
		{
			"include": "#nbt-array"
		},
		{
			"match": "(?:^|(?<=run )) *(achievement|advancement|attribute|ban|ban-ip|banlsit|blockdata|bossbar|chunk|clear|clone|data|datapack|debug|defaultgamemode|deop|difficulty|effect|enchant|entitydata|execute|experience|fill|forceload|function|gamemode|gamerule|give|item|jfr|kick|kill|locate|locatebiome|loot|me|msg|op|pardon|pardon-ip|particle|perf|placefeature|playsound|publish|recipe|reload|replaceitem|save-all|save-off|save-on|say|schedule|scoreboard|seed|setblock|setidletimeout|setworldspawn|spawnpoint|spectate|spreadplayers|stats|stop|stopsound|summon|tag|team|teleport|tell|tellraw|time|title|toggledownfall|tp|trigger|w|weather|whitelist|worldborder|xp)\\b",
			"captures":{
				"1":{
					"name":"command"
				}
			}
		},
		{
			"match": "^ *#(.*)",
			"name": "comment",
			"captures":{
				"1":{
					"patterns":[{ "include": "$self" }]
				}
			}
		},
		{
			"match": "[0-9a-fA-F]{1,8}(?:-[0-9a-fA-F]{1,4}){3}-[0-9a-fA-F]{1,12}|[0-9a-fA-F]{32}",
			"name": "uuid"
		},
		{
			"match": "(?: (?:[~\\^]-?(?:\\d*\\.)?\\d*|-?(?:\\d*\\.)?\\d+)){3}",
			"name": "coord"
		},
		{
			"match": "^ *\\/.*",
			"name": "error"
		},
		{
			"match": "(?<!\\w)(\\d+(?=[bfsdl])[bfsdl]|([~\\-^]*\\d+|[~|^]))(?!\\w)",
			"name": "number"
		},
		{
			"match": "(?<=team) (?:add|remove|join|empty|list) ([^\\s]{17,})",
			"captures": {
				"1": {
					"name": "error"
				}
			}
		}
	],
	"repository": {
		"nbt-array": {
			"begin": "\\[",
			"end": "\\]",
			"name": "array.nbt",
			"patterns": [
				{
					"match": "(?<=\\[)\\d+(?=\\])",
					"name": "number"
				},
				{
					"include": "#nbt-value"
				},
				{
					"match":"[\\w_]+(?==)",
					"name": "key"
				},
				{
					"match":"(?<==)[\\w_]+(?=[,\\]])",
					"name": "value"
				}
			]
		},
		"nbt-compound": {
			"begin": "{",
			"end": "}",
			"name": "compound.nbt",
			"patterns": [
				{
					"include": "#nbt-key-quoted"
				},
				{
					"match": "\\d+(?=[bfsdl])[bfsdl]|(?<=\\W)(\\d+)(?=\\W)",
					"name": "value"
				},
				{
					"match": "(?<==)[^{][\\w_]+",
					"name": "value"
				},
				{
					"include": "#nbt-key-unquoted"
				},
				{
					"begin": "[:=][\\t_]*",
					"end": "(?=[\\t ]*}|,)",
					"patterns": [
						{
							"include": "#nbt-value"
						}
					]
				}
			]
		},
		"nbt-key-quoted": {
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"match": "\\\\(?:[\"\\\\/bfnrt])|(?:u[0-9a-fA-F]{4})"
				}
			],
			"name": "key.nbt"
		},
		"nbt-key-unquoted": {
			"match": "(minecraft:)*[\\w_/#]+",
			"name": "key"
		},
		"nbt-value": {
			"patterns": [
				{
					"include": "#nbt-string"
				},
				{
					"include": "#nbt-number"
				},
				{
					"include": "#nbt-compound"
				},
				{
					"include": "#nbt-array"
				},
				{
					"match": "true|false",
					"name": "value"
				}
			]
		},
		"nbt-string": {
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"match": "\\\\(?:[\"\\\\/bfnrt])|(?:u[0-9a-fA-F]{4})"
				}
			],
			"name": "value.string.nbt"
		},
		"nbt-number": {
			"match": "-?\\d+(?:\\.\\d+)?[bfdl]?",
			"name": "value"
		}
	}
}
